name: Deploy

on:
  workflow_call:
    inputs:
      stack-name:
        type: string
        description: Name of the stack to deploy to
        required: true
      sha:
        type: string
        description: DEPRECATED - do not use, as it will be ignored.
        required: false
        default: ${{ github.sha }}
      reuse-image:
        type: string
        description: DEPRECATED - do not use, as it will be ignored.
        required: false
        default: "false"

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}

jobs:
  name-and-shame:
    runs-on: ubuntu-latest
    steps:
      - name: Slack notifier
        run: |
          curl -X POST ${{ secrets.FREEZEBOT_WEBHOOK }} \
            -H 'Content-type: application/json' \
            -d @- <<PAYLOAD
              {
                "text": "An emergency deployment has been triggered on \`${{ github.event.repository.name }}\` by ${{ github.triggering_actor }} with commit SHA \`${{ github.sha }}\`.",
                "icon_emoji": ":rotating_light:",
                "username": "Emergency-o-matic"
              }
          PAYLOAD

  deploy-production:
    uses: stampedeapp/actions/.github/workflows/aws-ecs-deploy.yml@main
    with:
      ldt-env: "production"
      ldt-environment: "prod"
      stack-name: ${{ inputs.stack-name }}
      environment: "Production"
      check-code-freeze: "false"
    secrets: inherit
