name: Deploy

on:
  workflow_call:
    inputs:
      ldt-environment:
        type: string
        description: LDT environment to use
        required: false
        default: prod
      environment:
        type: string
        required: false
        default: Production
      stack-name:
        type: string
        description: Name of the stack to deploy to
        required: true
      sha:
        type: string
        description: SHA of the commit to use for deployment
        required: false
        default: ${{ github.sha }}

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}

jobs:
  name-and-shame:
    runs-on: ubuntu-latest
    steps:
      - name: Slack notifier
        run: |
          curl -X POST ${{ secrets.FREEZEBOT_WEBHOOK }} \
            -H 'Content-type: application/json' \
            -d @- <<PAYLOAD
              {
                "text": "An emergency deployment has been triggered on \`${{ github.event.repository.name }}\` by ${{ github.triggering_actor }} with commit SHA \`${{ github.sha }}\`.",
                "icon_emoji": ":rotating_light:",
                "username": "Emergency-o-matic"
              }
          PAYLOAD
  
  execute-changeset:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency:
      group: cloudformation-${{ inputs.ldt-environment }}
    steps:
      - uses: stampedeapp/actions/deploy@main
        with:
          stack-name: ${{ inputs.stack-name }}
          ldt-environment: ${{ inputs.ldt-environment }}
          npm-token: ${{ secrets.NPM_READONLY_TOKEN }}
          docker-hub-username: ${{ secrets.DOCKER_USERNAME }}
          docker-hub-password: ${{ secrets.DOCKER_PASSWORD }}
          github-sha: ${{ inputs.sha }}
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_DEPLOY_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          s3-path: ${{ secrets.S3_PATH }}

