name: Deploy

on:
  workflow_call:
    inputs:
      ldt-environment:
        type: string
        description: LDT environment to use
        required: false
        default: dev
      environment:
        type: string
        required: false
        default: Development
      stack-name:
        type: string
        description: Name of the stack to deploy to
        required: true
      sha:
        type: string
        description: SHA of the commit to use for deployment
        required: false
        default: ${{ github.sha }}

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: stampedeapp/actions/install-dependencies@main

  static:
    uses: stampedeapp/actions/.github/workflows/static.yml@main
    needs: install
    secrets: inherit

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: stampedeapp/actions/setup@main
      - uses: stampedeapp/actions/deploy-to-ecr@main
        with:
          ldt-environment: ${{ inputs.ldt-environment }}
          npm-token: ${{ secrets.NPM_READONLY_TOKEN }}
          docker-hub-username: ${{ secrets.DOCKER_USERNAME }}
          docker-hub-password: ${{ secrets.DOCKER_PASSWORD }}
          github-sha: ${{ inputs.sha }}
  
  execute-changeset:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs:
      - static
      - build
    concurrency:
      group: cloudformation-${{ inputs.ldt-environment }}
    steps:
      - uses: stampedeapp/actions/check-code-freeze@main
        with:
          github-token: ${{ secrets.WORKFLOW_CALL_TOKEN }}
      - uses: stampedeapp/actions/deploy-to-cloudformation-cli@main
        with:
          stack-name: ${{ inputs.stack-name }}
          ldt-environment: ${{ inputs.ldt-environment }}
          github-sha: ${{ inputs.sha }}

