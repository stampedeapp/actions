name: Static

on:
  workflow_call:
    inputs:
      test-setup-command:
        type: string
        description: Command to run to setup the test environment
        required: false
        default: ""

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
  CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_KEY }}

jobs:
  typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: stampedeapp/actions/setup@main
      - run: yarn tsc
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: stampedeapp/actions/setup@main
      - run: yarn lint
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: stampedeapp/actions/setup@main
      - run: ${{ inputs.test-setup-command }}
        if: ${{ inputs.test-setup-command != '' }}
      - uses: stampedeapp/actions/jest@main
      - uses: stampedeapp/actions/jest-coverage@main
  type-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: stampedeapp/actions/setup@main
      - run: yarn global add type-coverage typescript
      - name: Get type coverage
        run: |
          export coverage=$(type-coverage | head -n 1 | grep -oE "[^ ]+$")
          echo "coverage=${coverage%?}" >> $GITHUB_ENV
          echo "Coverage: $coverage" >> $GITHUB_OUTPUT
      - name: Upload to datadog
        uses: masci/datadog@v1
        with: 
          api-key: ${{ secrets.DATADOG_API_KEY }}
          metrics: |
            - type: gauge
              name: type-coverage
              value: ${{ env.coverage }}
              tags:
                - "repo:${{ github.repository }}"
                - "service:${{ github.event.repository.name }}"
                - "branch:${{ github.ref }}"
                - "commit:${{ github.sha }}"

