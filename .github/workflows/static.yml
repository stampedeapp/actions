name: Static

on:
  workflow_call:
    inputs:
      test-setup-command:
        type: string
        description: Command to run to setup the test environment
        required: false
        default: ""
      working-directory:
        type: string
        description: Directory to run the pipeline in
        required: false
        default: "."

env:
  DEEPSOURCE_DSN: "${{ secrets.DEEPSOURCE_DSN }}"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
  CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_KEY }}

jobs:
  typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: stampedeapp/actions/setup@monorepo
        with: 
          working-directory: ${{ inputs.working-directory }}
      - run: yarn tsc
        working-directory: ${{ inputs.working-directory }}
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: stampedeapp/actions/setup@monorepo
        with: 
          working-directory: ${{ inputs.working-directory }}
      - run: yarn lint
        working-directory: ${{ inputs.working-directory }}

  cloudformation:
    name: Cloudformation Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Check file existence"
        uses: andstor/file-existence-action@v2
        id: check_files
        with:
          files: "${{ inputs.working-directory }}/cloudformation/cloudformation.yaml"

      - name: CFN Lint
        uses: scottbrenner/cfn-lint-action@v2
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          command: cd ${{ inputs.working-directory }} ; cfn-lint -r eu-west-1 -t ./cloudformation/cloudformation.yaml

  cloudformation-parameters-validation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment: ["dev", "staging", "prod"]
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: stampedeapp/actions/cloudformation-validate@monorepo
        with:
          environment: ${{ matrix.environment }}
          working-directory: ${{ inputs.working-directory }}
  jest:
    runs-on: ubuntu-latest-4-cores
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: stampedeapp/actions/setup@monorepo
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          working-directory: ${{ inputs.working-directory }}
      - run: ${{ inputs.test-setup-command }}
        if: ${{ inputs.test-setup-command != '' }}
      - run: curl https://deepsource.io/cli | sh
      - uses: stampedeapp/actions/jest@monorepo
        with:
          workers: 2
          working-directory: ${{ inputs.working-directory }}
      - if: ${{ always() && env.DEEPSOURCE_DSN != '' }}
        run: cd ${{ inputs.working-directory }}; ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/cobertura-coverage.xml
        


