name: Deploy stack to Cloudformation
description: Deploy stack to Cloudformation

inputs:
  no-execute-changeset:
    default: 'true'
    description: 'Do not execute the changeset'
    required: false
  ldt-environment:
    description: The LDT environment name to use for deployment (e.g. 'dev', 'local')
    required: true
  aws-access-key-id:
    description: The AWS access key ID to use for deployment.
    required: true
  aws-secret-access-key:
    description: The AWS secret access key to use for deployment.
    required: true
  cloudformation-role-arn:
    description: The ARN of the Cloudformation role to use for deployment.
    required: true
  s3-path:
    description: The S3 path to use for static assets.
    required: true

outputs:
  stack-id:
    description: The ID of the created stack
    value: ${{ steps.deploy-to-cloudformation.outputs.stack-id }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get cached Next.JS build
      # REMOVEME: Once S3 assets are moved to cloudflare
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

    - name: Configure AWS credentials
      # Log in without assuming role first, to get ECR registry name
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        role-to-assume: ${{ inputs.cloudformation-role-arn }}
        role-duration-seconds: 900
        role-skip-session-tagging: true

    - name: Push resources to S3
      shell: bash
      # REMOVEME: Once S3 assets are moved to cloudflare
      run: aws s3 sync .next/static ${{ inputs.s3-path }}/_next/static --acl public-read --exclude "*.map"

    - name: Deploy to cloudformation
      id: deploy-to-cloudformation
      uses: stampedeapp/aws-cloudformation-github-deploy@master
      with:
        name: ECS-Service-Web
        template: cloudformation/cloudformation.yaml
        no-fail-on-empty-changeset: '1'
        no-execute-changeset: ${{inputs.no-execute-changeset == 'true' && '1' || '0'}}
        capabilities: CAPABILITY_NAMED_IAM
        parameters-file: configs/${{ inputs.ldt-environment }}.json
        changeset-postfix: -${{ github.sha }}
        parameter-overrides: |
          ECRImage: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ inputs.ldt-environment }}-${{ github.sha }}
          ContainerName: Web
          ALBRulePriority: 1600
          DataDogDeploymentVersion: ${{ github.sha }}
