name: Deploy to ECR
description: Deploy to ECR

inputs:
  npm-token:
    description: The NPM token to use for deployment.
    required: true
  ldt-environment:
    description: The LDT environment name to use for deployment (e.g. 'dev', 'local')
    required: true
  aws-access-key-id:
    description: The AWS access key ID to use for deployment.
    required: true
  aws-secret-access-key:
    description: The AWS secret access key to use for deployment.
    required: true
  docker-hub-username:
    description: The Docker Hub username to use for deployment.
    required: true
  docker-hub-password:
    description: The Docker Hub password to use for deployment.
    required: true
  dockerfile:
    description: The Dockerfile to use for deployment.
    default: Dockerfile
  image-name:
    description: The name of the image to use for deployment.
    default: ${{ github.event.repository.name }}

runs:
  using: composite
  steps:
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker-hub-username }}
        password: ${{ inputs.docker-hub-password }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Build, tag, and push docker image to Amazon ECR Public
      uses: docker/build-push-action@v2
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}:${{ inputs.ldt-environment }}-${{ github.sha }},${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}:${{ inputs.ldt-environment }}-latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        build-args: |
          NPM_TOKEN=${{ inputs.npm-token }}
          COMMIT_HASH=${{ github.sha }}
    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
